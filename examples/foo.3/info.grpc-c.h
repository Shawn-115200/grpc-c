/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: info.proto */

#ifndef PROTOBUF_C_info_2eproto__INCLUDED
#define PROTOBUF_C_info_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

#include <grpc/grpc.h>
#include <grpc/byte_buffer_reader.h>
#include <grpc/support/alloc.h>
#include <grpc/support/log.h>
#include <grpc-c/grpc-c.h>

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Info__GpuStatus Info__GpuStatus;
typedef struct _Info__GpuStatus info__GpuStatus;
#define info__GpuStatus__init info__gpu_status__init
#define info__GpuStatus__free_unpacked info__gpu_status__free_unpacked
typedef struct _Info__ReqUserInfo Info__ReqUserInfo;
typedef struct _Info__ReqUserInfo info__reqUserInfo;
#define info__reqUserInfo__init info__req_user_info__init
#define info__reqUserInfo__free_unpacked info__req_user_info__free_unpacked
typedef struct _Info__RspUserInfo Info__RspUserInfo;
typedef struct _Info__RspUserInfo info__rspUserInfo;
#define info__rspUserInfo__init info__rsp_user_info__init
#define info__rspUserInfo__free_unpacked info__rsp_user_info__free_unpacked


/* --- enums --- */


/* --- messages --- */

/*
 * GPU 状态
 */
struct  _Info__GpuStatus
{
  ProtobufCMessage base;
  /*
   * 显卡厂商 (0: 未知 1: Intel 2: AMD 3: Nvidia)
   */
  protobuf_c_boolean has_vendor;
  int64_t vendor;
  protobuf_c_boolean has_usage;
  double usage;
  /*
   * 时间戳（毫秒）
   */
  protobuf_c_boolean has_timestamp;
  int64_t timestamp;
};
#define INFO__GPU_STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&info__gpu_status__descriptor) \
    , 0, 0, 0, 0, 0, 0 }


/*
 * 用户请求信息
 */
struct  _Info__ReqUserInfo
{
  ProtobufCMessage base;
  /*
   * 用户名
   */
  char *username;
  /*
   * 成绩
   */
  protobuf_c_boolean has_score;
  double score;
  /*
   * 时间戳（毫秒）
   */
  protobuf_c_boolean has_timestamp;
  int64_t timestamp;
};
#define INFO__REQ_USER_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&info__req_user_info__descriptor) \
    , NULL, 0, 0, 0, 0 }


/*
 * 用户响应信息
 */
struct  _Info__RspUserInfo
{
  ProtobufCMessage base;
  /*
   * 用户名
   */
  char *username;
  /*
   * 成绩
   */
  protobuf_c_boolean has_score;
  double score;
  /*
   * 时间戳（毫秒）
   */
  protobuf_c_boolean has_timestamp;
  int64_t timestamp;
};
#define INFO__RSP_USER_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&info__rsp_user_info__descriptor) \
    , NULL, 0, 0, 0, 0 }


/* Info__GpuStatus methods */
void   info__gpu_status__init
                     (Info__GpuStatus         *message);
size_t info__gpu_status__get_packed_size
                     (const Info__GpuStatus   *message);
size_t info__gpu_status__pack
                     (const Info__GpuStatus   *message,
                      uint8_t             *out);
size_t info__gpu_status__pack_to_buffer
                     (const Info__GpuStatus   *message,
                      ProtobufCBuffer     *buffer);
Info__GpuStatus *
       info__gpu_status__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   info__gpu_status__free_unpacked
                     (Info__GpuStatus *message,
                      ProtobufCAllocator *allocator);
/* Info__ReqUserInfo methods */
void   info__req_user_info__init
                     (Info__ReqUserInfo         *message);
size_t info__req_user_info__get_packed_size
                     (const Info__ReqUserInfo   *message);
size_t info__req_user_info__pack
                     (const Info__ReqUserInfo   *message,
                      uint8_t             *out);
size_t info__req_user_info__pack_to_buffer
                     (const Info__ReqUserInfo   *message,
                      ProtobufCBuffer     *buffer);
Info__ReqUserInfo *
       info__req_user_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   info__req_user_info__free_unpacked
                     (Info__ReqUserInfo *message,
                      ProtobufCAllocator *allocator);
/* Info__RspUserInfo methods */
void   info__rsp_user_info__init
                     (Info__RspUserInfo         *message);
size_t info__rsp_user_info__get_packed_size
                     (const Info__RspUserInfo   *message);
size_t info__rsp_user_info__pack
                     (const Info__RspUserInfo   *message,
                      uint8_t             *out);
size_t info__rsp_user_info__pack_to_buffer
                     (const Info__RspUserInfo   *message,
                      ProtobufCBuffer     *buffer);
Info__RspUserInfo *
       info__rsp_user_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   info__rsp_user_info__free_unpacked
                     (Info__RspUserInfo *message,
                      ProtobufCAllocator *allocator);

/* --- data packers and unpackers -- */

/* info__gpu_status packer and unpacker methods */
size_t info__gpu_status_packer (void *input, grpc_byte_buffer **buffer);
void *info__gpu_status_unpacker (grpc_c_context_t *context, grpc_byte_buffer *buffer);
void info__gpu_status_free (Info__GpuStatus * buf);

/* info__req_user_info packer and unpacker methods */
size_t info__req_user_info_packer (void *input, grpc_byte_buffer **buffer);
void *info__req_user_info_unpacker (grpc_c_context_t *context, grpc_byte_buffer *buffer);
void info__req_user_info_free (Info__ReqUserInfo * buf);

/* info__rsp_user_info packer and unpacker methods */
size_t info__rsp_user_info_packer (void *input, grpc_byte_buffer **buffer);
void *info__rsp_user_info_unpacker (grpc_c_context_t *context, grpc_byte_buffer *buffer);
void info__rsp_user_info_free (Info__RspUserInfo * buf);


/* --- services --- */

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor info__gpu_status__descriptor;
extern const ProtobufCMessageDescriptor info__req_user_info__descriptor;
extern const ProtobufCMessageDescriptor info__rsp_user_info__descriptor;



#endif  /* PROTOBUF_C_info_2eproto__INCLUDED */
